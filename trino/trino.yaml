---
apiVersion: v1
kind: Service
metadata:
  name: trino
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30880

  selector:
    app: trino-coordinator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trino-coordinator
spec:
  selector:
    matchLabels:
      app: trino-coordinator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: trino-coordinator
    spec:
      containers:
      - name: trino
        image: trinodb/trino:352
        env:
        - name: STORAGE_ACCOUNT
          valueFrom:
            secretKeyRef:
              name: azure-blob-access
              key: storage-account
        - name: AZURE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: azure-blob-access
              key: access-key

        ports:
        - containerPort: 8080
#        env:
#        - name: AWS_ACCESS_KEY_ID
#          valueFrom:
#            secretKeyRef:
#              name: my-s3-keys
#              key: access-key
#        - name: AWS_SECRET_ACCESS_KEY
#          valueFrom:
#            secretKeyRef:
#              name: my-s3-keys
#              key: secret-key
        volumeMounts:
        - name: trino-cfg-vol
          mountPath: /etc/trino/jvm.config
          subPath: jvm.config
        - name: trino-cfg-vol
          mountPath: /etc/trino/config.properties
          subPath: config.properties.coordinator
        - name: trino-cfg-vol
          mountPath: /etc/trino/node.properties
          subPath: node.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/hive.properties
          subPath: hive.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/kafka.properties
          subPath: kafka.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/elasticsearch.properties
          subPath: elasticsearch.properties
      # resources:
          #requests:
          #  memory: "16G"
          #  cpu: 4
        imagePullPolicy: Always
      volumes:
        - name: trino-cfg-vol
          configMap:
            name: trino-configs
     #nodeSelector:
      #  dedicated_label: trinomaster
      #tolerations:
       # - key: "dedicated_label"
        #  operator: "Equal"
         # value: "trinomaster"
          #effect: "NoSchedule"

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: trino-worker
spec:
  serviceName: trino-worker 
  replicas: 1
  selector:
    matchLabels:
      app: trino-worker
  template:
    metadata:
      labels:
        app: trino-worker
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - name: trino
        image: trinodb/trino:352
        env:
        - name: STORAGE_ACCOUNT
          valueFrom:
            secretKeyRef:
              name: azure-blob-access
              key: storage-account
        - name: AZURE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: azure-blob-access
              key: access-key
        - name: JAVA_OPTS
          value: "-Djava.io.tmpdir=/tmp"

        ports:
        - containerPort: 8080
#        env:
#        - name: AWS_ACCESS_KEY_ID
#          valueFrom:
#            secretKeyRef:
#              name: my-s3-keys
#              key: access-key
#        - name: AWS_SECRET_ACCESS_KEY
#          valueFrom:
#            secretKeyRef:
#              name: my-s3-keys
#              key: secret-key
        volumeMounts:
        - name: trino-cfg-vol
          mountPath: /etc/trino/jvm.config
          subPath: jvm.config
        - name: trino-cfg-vol
          mountPath: /etc/trino/config.properties
          subPath: config.properties.worker
        - name: trino-cfg-vol
          mountPath: /etc/trino/node.properties
          subPath: node.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/hive.properties
          subPath: hive.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/kafka.properties
          subPath: kafka.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/elasticsearch.properties
          subPath: elasticsearch.properties
        - name: trino-tmp-data
          mountPath: /tmp
          #resources:
          #requests:
          #  memory: "64G"
          #  cpu: 12
        imagePullPolicy: Always
      volumes:
        - name: trino-cfg-vol
          configMap:
            name: trino-configs
      #nodeSelector:
       # dedicated_label: trino
      #tolerations:
      #  - key: "dedicated_label"
     #     operator: "Equal"
          #value: "trino"
          #effect: "NoSchedule"
  volumeClaimTemplates:
  - metadata:
      name: trino-tmp-data
    spec:
      storageClassName: ssd-os-disk 
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: trino-cli
spec:
  containers:
  - name: trino-cli
    image: trinodb/trino:352
    command: ["tail", "-f", "/dev/null"]
    imagePullPolicy: Always
  restartPolicy: Always
  #nodeSelector:
#    dedicated_label: trino
 # tolerations:
  #  - key: "dedicated_label"
 #     operator: "Equal"
  #    value: "trino"
   #   effect: "NoSchedule"

