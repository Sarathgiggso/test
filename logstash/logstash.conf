input {
  beats {
    port => 5044
  }
  tcp {
    port => 5000
    type => syslog
  }
  udp {
    port => 5000
    type => syslog
  }
}
filter{ 
       if [agent][type] == "winlogbeat" {
        #mutate{copy => {"[@metadata][ip_address]" => "[beat][ip]"}}
        # removing hostname (this is not an ip but name of windows system
        #mutate { remove_field => ["hostname"] }
       # adding actual ip, in winloag beat, it will be public ip
        mutate { add_field => {"hostname" => "%{[host][hostname]}"}}
        mutate { add_field => {"feedText" => "%{message}"}}
        mutate { add_field => { "postedDate" => "%{@timestamp}" } }
        mutate { gsub => [ "postedDate", ".[0-9]{3}Z$", "+0000" ] }
        mutate { add_field => { "externalAppName" => "log" } }
        mutate { add_field => { "actStat" => 1 } }
        mutate { add_field => { "endDate" => "2020-12-30" } }
      }
 
    else if [type] == "syslog" {
        mutate {copy => { "message" => "feedText" }}
        grok {
            match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:feedText}" }
            match => {"message" => "%{GREEDYDATA:feedText}"}           
}
         if [syslog_hostname] {
           mutate {  add_field => {"hostname"=>"%{syslog_hostname}" }}
           }
          else {mutate { add_field => { "hostname" => "%{host}" } }}
	 #mutate { gsub => [ "hostname", "\..*", "" ] }
         mutate { add_field => { "postedDate" => "%{@timestamp}" } }
         mutate { gsub => [ "postedDate", ".[0-9]{3}Z$", "+0000" ] }
         mutate { add_field => { "externalAppName" => "log" } }
         mutate { add_field => { "actStat" => 1 } }
         mutate { add_field => { "endDate" => "2020-12-30" } }
         #mutate { add_field => {"feedText" => "%{syslog_message}"}} 
	 #mutate { add_field => {"hostname" => "%{[host][name]}"}}
         #mutate { add_field => {"source_input" => "%{[fields][log_type]}"}}
         mutate { remove_field => [ "host" ] }
    }
   else if "container" in [type] {
        #mutate{copy => {"[@metadata][ip_address]" => "[beat][ip]"}}
        # removing hostname (this is not an ip but name of windows system
        #mutate { remove_field => ["hostname"] }
       # adding actual ip, in winloag beat, it will be public ip
        mutate { add_field => {"hostname" => "%{[beat][hostname]}"}}
        mutate { add_field => {"feedText" => "%{message}"}}
        mutate { add_field => { "postedDate" => "%{@timestamp}" } }
        mutate { gsub => [ "postedDate", ".[0-9]{3}Z$", "+0000" ] }
        mutate { add_field => { "externalAppName" => "log" } }
        mutate { add_field => { "actStat" => 1 } }
        mutate { add_field => { "endDate" => "2020-12-30" } }
      }

    # when no type is match then it will execute the last else
    else  {
        #mutate{copy => {"[@metadata][ip_address]" => "[beat][ip]"}}
        # removing hostname (this is not an ip but name of windows system
        #mutate { remove_field => ["hostname"] }
       # adding actual ip, in winloag beat, it will be public ip
        mutate { add_field => {"hostname" => "%{[host][hostname]}"}}
        mutate { add_field => {"SENDER" => "%{[agent][type]}"}}
        mutate { add_field => {"feedText" => "%{message}"}}
        mutate { add_field => { "postedDate" => "%{@timestamp}" } }
        mutate { gsub => [ "postedDate", ".[0-9]{3}Z$", "+0000" ] }
        mutate { add_field => { "externalAppName" => "log" } }
        mutate { add_field => { "actStat" => 1 } }
        mutate { add_field => { "endDate" => "2020-12-30" } }
      }
}

output {

#       stdout { codec => rubydebug }
        elasticsearch {
                hosts => "elasticsearch.default:9200"
                user => "elastic"
                password => "changeme"
                index => "gglogs"
        }

}
